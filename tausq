[1mdiff --git a/app/build.gradle b/app/build.gradle[m
[1mindex 221ddfa..cc24894 100644[m
[1m--- a/app/build.gradle[m
[1m+++ b/app/build.gradle[m
[36m@@ -29,8 +29,6 @@[m [mdependencies {[m
     implementation fileTree(dir: 'libs', include: ['*.jar'])[m
     implementation 'com.github.uncorkedstudios:shadercam:2.0.1'[m
     implementation 'com.uncorkedstudios.android:recordable-surfaceview:1.5.7'[m
[31m-    implementation 'com.jakewharton:butterknife:10.2.1'[m
[31m-    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.1'[m
     implementation 'androidx.appcompat:appcompat:1.1.0'[m
     implementation 'androidx.constraintlayout:constraintlayout:1.1.3'[m
     implementation 'com.google.android.material:material:1.0.0'[m
[1mdiff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml[m
[1mindex b62a920..afcb1ed 100644[m
[1m--- a/app/src/main/AndroidManifest.xml[m
[1m+++ b/app/src/main/AndroidManifest.xml[m
[36m@@ -5,7 +5,7 @@[m
     <uses-permission android:name="android.permission.RECORD_AUDIO" />[m
     <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />[m
     <uses-permission android:name="android.permission.CAMERA" />[m
[31m-    <uses-feature android:name="android.hardware.camera2.full" />[m
[32m+[m[32m    <uses-feature android:name="android.hardware.camera2.full" android:required="true"/>[m
 [m
     <application[m
         android:allowBackup="true"[m
[1mdiff --git a/app/src/main/assets/touchcolor.frag.glsl b/app/src/main/assets/touchcolor.frag.glsl[m
[1mindex 18baa55..78db4cd 100644[m
[1m--- a/app/src/main/assets/touchcolor.frag.glsl[m
[1m+++ b/app/src/main/assets/touchcolor.frag.glsl[m
[36m@@ -14,6 +14,6 @@[m [muniform float offsetB;[m
 void main ()[m
 {[m
     vec4 cameraColor = texture2D(camTexture, v_CamTexCoordinate);[m
[31m-    vec3 negative = vec3(1., 1. , 1.) - cameraColor.xyz ;[m
[31m-    gl_FragColor = vec4(negative, 1.0);[m
[32m+[m[32m    vec3 negative = vec3(1., 1. , 1.) - cameraColor.xyz  ;[m
[32m+[m[32m    gl_FragColor = vec4(negative, 1.0)* vec4(offsetR, offsetG, offsetB,1.);[m
 }[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/java/camera/CameraActivity.java b/app/src/main/java/camera/CameraActivity.java[m
[1mindex 1fe3ffd..94271db 100644[m
[1m--- a/app/src/main/java/camera/CameraActivity.java[m
[1m+++ b/app/src/main/java/camera/CameraActivity.java[m
[36m@@ -17,10 +17,11 @@[m
 package camera;[m
 [m
 import android.Manifest;[m
[32m+[m[32mimport android.annotation.SuppressLint;[m
 import android.os.Bundle;[m
 import android.os.Environment;[m
 import android.util.Log;[m
[31m-import android.widget.Button;[m
[32m+[m[32mimport android.view.View;[m
 import android.widget.Toast;[m
 [m
 import androidx.fragment.app.FragmentActivity;[m
[36m@@ -31,27 +32,24 @@[m [mimport com.androidexperiments.shadercam.fragments.VideoFragment;[m
 import com.androidexperiments.shadercam.gl.VideoRenderer;[m
 import com.androidexperiments.shadercam.utils.ShaderUtils;[m
 import com.example.feedbackcam.R;[m
[32m+[m[32mimport com.google.android.material.button.MaterialButton;[m
 import com.uncorkedstudios.android.view.recordablesurfaceview.RecordableSurfaceView;[m
 [m
 import java.io.File;[m
 import java.io.IOException;[m
 import java.util.Arrays;[m
 [m
[31m-import butterknife.BindView;[m
[31m-import butterknife.ButterKnife;[m
[31m-import butterknife.OnClick;[m
 import gl.ShaderRenderer;[m
 [m
[31m-public class CameraActivity extends FragmentActivity implements PermissionsHelper.PermissionsListener {[m
[32m+[m[32mpublic class CameraActivity extends FragmentActivity implements PermissionsHelper.PermissionsListener, View.OnClickListener {[m
 [m
     private static final String TAG = CameraActivity.class.getSimpleName();[m
     private static final String TAG_CAMERA_FRAGMENT = "tag_camera_frag";[m
     private static final String TEST_VIDEO_FILE_NAME = "test_video.mp4";[m
     protected VideoRenderer mVideoRenderer;[m
[31m-    @BindView(R.id.texture_view)[m
     RecordableSurfaceView mRecordableSurfaceView;[m
[31m-    @BindView(R.id.btn_record)[m
[31m-    Button mRecordBtn;[m
[32m+[m[32m    MaterialButton mRecordBtn;[m
[32m+[m[32m    MaterialButton swapButton;[m
     private VideoFragment mVideoFragment;[m
     private PermissionsHelper mPermissionsHelper;[m
     private boolean mPermissionsSatisfied = false;[m
[36m@@ -60,15 +58,18 @@[m [mpublic class CameraActivity extends FragmentActivity implements PermissionsHelpe[m
     @Override[m
     protected void onCreate(Bundle savedInstanceState) {[m
         super.onCreate(savedInstanceState);[m
[31m-        mVideoRenderer = new ShaderRenderer(this);[m
         setContentView(R.layout.camera_view);[m
[31m-        ButterKnife.bind(this);[m
[31m-[m
[32m+[m[32m        mVideoRenderer = new ShaderRenderer(this);[m
[32m+[m[32m        mRecordableSurfaceView = new RecordableSurfaceView(this);[m
[32m+[m[32m        mRecordableSurfaceView = findViewById(R.id.texture_view);[m
[32m+[m[32m        mRecordBtn = findViewById(R.id.btn_record);[m
[32m+[m[32m        swapButton = findViewById(R.id.btn_swap_camera);[m
[32m+[m[32m        swapButton.setOnClickListener(this);[m
[32m+[m[32m        mRecordBtn.setOnClickListener(this);[m
         if (PermissionsHelper.isMorHigher())[m
             setupPermissions();[m
     }[m
 [m
[31m-[m
     private void setupPermissions() {[m
         mPermissionsHelper = PermissionsHelper.attach(this);[m
         mPermissionsHelper.setRequestedPermissions([m
[36m@@ -81,21 +82,21 @@[m [mpublic class CameraActivity extends FragmentActivity implements PermissionsHelpe[m
     private void setupVideoFragment(VideoRenderer renderer) {[m
         mVideoFragment = VideoFragment.getInstance();[m
         //pass in a reference to the RecordableSurfaceView - this is important[m
[31m-        mRecordableSurfaceView.setRenderMode(RecordableSurfaceView.RENDERMODE_CONTINUOUSLY);[m
[32m+[m[32m        //mRecordableSurfaceView.setRenderMode(RecordableSurfaceView.RENDERMODE_CONTINUOUSLY);[m
         mVideoFragment.setRecordableSurfaceView(mRecordableSurfaceView);[m
         //Connect your renderer[m
         mVideoFragment.setVideoRenderer(renderer);[m
[32m+[m
         mVideoFragment.setCameraToUse(VideoFragment.CAMERA_PRIMARY);[m
         FragmentTransaction transaction = getSupportFragmentManager().beginTransaction();[m
         transaction.add(mVideoFragment, TAG_CAMERA_FRAGMENT);[m
         transaction.commit();[m
     }[m
 [m
[32m+[m[32m    @SuppressLint("ClickableViewAccessibility")[m
     private void setupInteraction() {[m
         mRecordableSurfaceView.setOnTouchListener((v, event) -> {[m
[31m-            Log.i("topo", "eccoci " + mVideoFragment.getVideoRenderer().getClass());[m
             if (mVideoFragment.getVideoRenderer() instanceof ShaderRenderer) {[m
[31m-                Log.i("topo", "eccoci quiii :D");[m
                 ((ShaderRenderer) mVideoFragment.getVideoRenderer())[m
                         .setTouchPoint(event.getRawX(), event.getRawY());[m
                 return true;[m
[36m@@ -140,11 +141,6 @@[m [mpublic class CameraActivity extends FragmentActivity implements PermissionsHelpe[m
         mRecordableSurfaceView.pause();[m
     }[m
 [m
[31m-    @OnClick(R.id.btn_swap_camera)[m
[31m-    public void onClickSwapCamera() {[m
[31m-        mVideoFragment.swapCamera();[m
[31m-    }[m
[31m-[m
     private File getVideoFile() {[m
         return new File(Environment.getExternalStorageDirectory(), TEST_VIDEO_FILE_NAME);[m
     }[m
[36m@@ -169,4 +165,11 @@[m [mpublic class CameraActivity extends FragmentActivity implements PermissionsHelpe[m
         Toast.makeText(this, "shadercam needs all permissions to function, please try again.", Toast.LENGTH_LONG).show();[m
         this.finish();[m
     }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public void onClick(View v) {[m
[32m+[m[32m        if (v.getId() == R.id.btn_swap_camera) {[m
[32m+[m[32m            mVideoFragment.swapCamera();[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
 }[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/java/gl/ShaderRenderer.java b/app/src/main/java/gl/ShaderRenderer.java[m
[1mindex a0b981a..d0bcea7 100644[m
[1m--- a/app/src/main/java/gl/ShaderRenderer.java[m
[1m+++ b/app/src/main/java/gl/ShaderRenderer.java[m
[36m@@ -1,13 +1,29 @@[m
 package gl;[m
 [m
 import android.content.Context;[m
[32m+[m[32mimport android.graphics.Bitmap;[m
[32m+[m[32mimport android.graphics.BitmapFactory;[m
[32m+[m[32mimport android.graphics.Matrix;[m
 import android.opengl.GLES20;[m
[32m+[m[32mimport android.os.Environment;[m
[32m+[m[32mimport android.util.Log;[m
 [m
 [m
 import com.androidexperiments.shadercam.gl.VideoRenderer;[m
 [m
[32m+[m[32mimport java.io.BufferedOutputStream;[m
[32m+[m[32mimport java.io.File;[m
[32m+[m[32mimport java.io.FileOutputStream;[m
[32m+[m[32mimport java.io.IOException;[m
[32m+[m[32mimport java.nio.ByteBuffer;[m
[32m+[m[32mimport java.nio.ByteOrder;[m
[32m+[m
[32m+[m
 public class ShaderRenderer extends VideoRenderer {[m
[32m+[m[32m    private static final File FILES_DIR = Environment.getExternalStorageDirectory();[m
[32m+[m[32m    private int frameCount = 0;[m
 [m
[32m+[m[32m    private ByteBuffer mPixelBuf;[m
     private float offsetR = 0.5f;[m
     private float offsetG = 0.5f;[m
     private float offsetB = 0.5f;[m
[36m@@ -16,6 +32,13 @@[m [mpublic class ShaderRenderer extends VideoRenderer {[m
         super(context, "touchcolor.frag.glsl", "touchcolor.vert.glsl");[m
     }[m
 [m
[32m+[m[32m    @Override[m
[32m+[m[32m    public void onSurfaceChanged(int width, int height) {[m
[32m+[m[32m        super.onSurfaceChanged(width, height);[m
[32m+[m[32m        mPixelBuf = ByteBuffer.allocateDirect( width *  height * 4);[m
[32m+[m[32m        mPixelBuf.order(ByteOrder.LITTLE_ENDIAN);[m
[32m+[m[32m    }[m
[32m+[m
     @Override[m
     protected void setUniformsAndAttribs() {[m
         super.setUniformsAndAttribs();[m
[36m@@ -28,10 +51,45 @@[m [mpublic class ShaderRenderer extends VideoRenderer {[m
         GLES20.glUniform1f(offsetBLoc, offsetB);[m
     }[m
 [m
[31m-[m
     public void setTouchPoint(float rawX, float rawY) {[m
         offsetR = rawX / mSurfaceWidth;[m
         offsetG = rawY / mSurfaceHeight;[m
         offsetB = offsetR / offsetG;[m
     }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public void onDrawFrame(){[m
[32m+[m[32m        super.onDrawFrame();[m
[32m+[m[32m        if(frameCount < 4) {[m
[32m+[m[32m            File outputFile = new File(FILES_DIR,[m
[32m+[m[32m                    String.format("frame-%02d.png", frameCount));[m
[32m+[m[32m            try {[m
[32m+[m[32m                saveFrame(outputFile.toString());[m
[32m+[m[32m            } catch (IOException e) {[m
[32m+[m[32m                e.printStackTrace();[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void saveFrame(String filename) throws IOException {[m
[32m+[m[32m        mPixelBuf.rewind();[m
[32m+[m[32m        GLES20.glReadPixels(0, 0,  this.mSurfaceWidth ,this.mSurfaceHeight , GLES20.GL_RGBA, GLES20.GL_UNSIGNED_BYTE,[m
[32m+[m[32m                mPixelBuf);[m
[32m+[m
[32m+[m[32m        BufferedOutputStream bufferedOutputStream = null;[m
[32m+[m[32m        try {[m
[32m+[m[32m            bufferedOutputStream = new BufferedOutputStream(new FileOutputStream(filename));[m
[32m+[m[32m            Bitmap bitmap = Bitmap.createBitmap( this.mSurfaceWidth ,this.mSurfaceHeight , Bitmap.Config.ARGB_8888);[m
[32m+[m[32m            //mPixelBuf.rewind();[m
[32m+[m[32m            bitmap.compress(Bitmap.CompressFormat.PNG, 90, bufferedOutputStream);[m
[32m+[m[32m            bitmap.recycle();[m
[32m+[m[32m        }[m
[32m+[m[32m        finally {[m
[32m+[m[32m            if (bufferedOutputStream != null) bufferedOutputStream.close();[m
[32m+[m[32m        }[m
[32m+[m[32m        frameCount++;[m
[32m+[m
[32m+[m[32m        Log.v("Picture ", "Saved " +  this.mSurfaceWidth + "x" + this.mSurfaceHeight + " frame as '" + filename + "'" + "DIRECTORY IS: "+ FILES_DIR);[m
[32m+[m[32m    }[m
 }[m
[1mdiff --git a/app/src/main/res/layout/camera_view.xml b/app/src/main/res/layout/camera_view.xml[m
[1mindex 64be5f7..c719ab4 100644[m
[1m--- a/app/src/main/res/layout/camera_view.xml[m
[1m+++ b/app/src/main/res/layout/camera_view.xml[m
[36m@@ -10,31 +10,22 @@[m
         android:layout_width="match_parent"[m
         android:layout_height="match_parent" />[m
 [m
[31m-    <Button[m
[32m+[m[32m    <com.google.android.material.button.MaterialButton[m
         android:id="@+id/btn_record"[m
         android:layout_width="125dp"[m
         android:layout_height="60dp"[m
         android:layout_centerHorizontal="true"[m
         android:layout_alignParentBottom="true"[m
         android:layout_marginBottom="20dp"[m
[31m-        android:text="Record"/>[m
[32m+[m[32m        android:text="@string/record"/>[m
 [m
[31m-    <Button[m
[32m+[m[32m    <com.google.android.material.button.MaterialButton[m
         android:id="@+id/btn_swap_camera"[m
         android:layout_width="wrap_content"[m
         android:layout_height="wrap_content"[m
[31m-        android:layout_alignParentRight="true"[m
[32m+[m[32m        android:layout_alignParentEnd="true"[m
[32m+[m[32m        android:clickable="false"[m
         android:layout_margin="10dp"[m
[31m-        android:text="swap"/>[m
[31m-[m
[31m-    <SeekBar[m
[31m-        android:id="@+id/seek_bar"[m
[31m-        android:layout_width="match_parent"[m
[31m-        android:layout_height="wrap_content"[m
[31m-        android:layout_margin="20dp"[m
[31m-        android:layout_above="@id/btn_record"[m
[31m-        android:progress="50"[m
[31m-        android:max="100"[m
[31m-        android:padding="10dp"/>[m
[32m+[m[32m        android:text="@string/swap_camera"/>[m
 [m
 </RelativeLayout>[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/res/values/colors.xml b/app/src/main/res/values/colors.xml[m
[1mindex cc0da38..69b2233 100644[m
[1m--- a/app/src/main/res/values/colors.xml[m
[1m+++ b/app/src/main/res/values/colors.xml[m
[36m@@ -3,5 +3,4 @@[m
     <color name="colorPrimary">#008577</color>[m
     <color name="colorPrimaryDark">#00574B</color>[m
     <color name="colorAccent">#D81B60</color>[m
[31m-    <color name="control_background">#cc4285f4</color>[m
 </resources>[m
[1mdiff --git a/app/src/main/res/values/dimens.xml b/app/src/main/res/values/dimens.xml[m
[1mindex 5740a90..7abc06d 100644[m
[1m--- a/app/src/main/res/values/dimens.xml[m
[1m+++ b/app/src/main/res/values/dimens.xml[m
[36m@@ -1,3 +1 @@[m
[31m-<resources>[m
[31m-    <dimen name="margin_def">16dp</dimen>[m
[31m-</resources>[m
[32m+[m[32m<resources></resources>[m
[1mdiff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml[m
[1mindex 996fedf..e71b4a2 100644[m
[1m--- a/app/src/main/res/values/strings.xml[m
[1m+++ b/app/src/main/res/values/strings.xml[m
[36m@@ -1,9 +1,5 @@[m
 <resources>[m
     <string name="app_name">FeedbackCam</string>[m
[31m-    <string name="action_settings">Settings</string>[m
[31m-    <string name="picture">Picture</string>[m
[31m-    <string name="description_info">Info</string>[m
[31m-    <string name="request_permission">This sample needs camera permission.</string>[m
[31m-    <string name="camera_error">This device doesn\'t support Camera2 API.</string>[m
[31m-    <string name="intro_message">Welcome to your app</string>[m
[32m+[m[32m    <string name="swap_camera">Swap</string>[m
[32m+[m[32m    <string name="record">Record</string>[m
 </resources>[m
[1mdiff --git a/app/src/main/res/values/styles.xml b/app/src/main/res/values/styles.xml[m
[1mindex 545b9c6..bb5819a 100644[m
[1m--- a/app/src/main/res/values/styles.xml[m
[1m+++ b/app/src/main/res/values/styles.xml[m
[36m@@ -1,20 +1,11 @@[m
 <resources>[m
 [m
     <!-- Base application theme. -->[m
[31m-    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">[m
[32m+[m[32m    <style name="AppTheme" parent="Theme.MaterialComponents">[m
         <!-- Customize your theme here. -->[m
         <item name="colorPrimary">@color/colorPrimary</item>[m
         <item name="colorPrimaryDark">@color/colorPrimaryDark</item>[m
         <item name="colorAccent">@color/colorAccent</item>[m
     </style>[m
 [m
[31m-    <style name="AppTheme.NoActionBar">[m
[31m-        <item name="windowActionBar">false</item>[m
[31m-        <item name="windowNoTitle">true</item>[m
[31m-    </style>[m
[31m-[m
[31m-    <style name="AppTheme.AppBarOverlay" parent="ThemeOverlay.AppCompat.Dark.ActionBar" />[m
[31m-[m
[31m-    <style name="AppTheme.PopupOverlay" parent="ThemeOverlay.AppCompat.Light" />[m
[31m-[m
 </resources>[m
[1mdiff --git a/settings.gradle b/settings.gradle[m
[1mindex b43b684..2e97ec5 100644[m
[1m--- a/settings.gradle[m
[1m+++ b/settings.gradle[m
[36m@@ -1,3 +1,2 @@[m
 include ':app'[m
[31m-include ':shadercam'[m
 rootProject.name='FeedbackCam'[m
